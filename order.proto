syntax = "proto3";

package order;

option go_package = "/proto";

message Order {
  uint32 session_id = 1;
  string exchange_code = 2;
  string eba_match_account = 3;
  string user_id = 4;
  string channel = 5;
  int32 cse_id = 6;
  string pipe_id = 7;
  string ctcl_id = 8;
  string product_type = 9;
  string underlying = 10;
  string expiry_date = 11;
  string excercise_type = 12;
  string option_type = 13;
  int32 strike_price = 14;
  string index_or_stock = 15;
  int32 ca_level = 16;
  int32 action_id = 17;
  float balance_amount = 18;
  string can_modify_flag = 19;
  string nkd_blocked_flag = 20;
  string modify_trade_date = 21;
  string modify_trade_time = 22;
  string slm_flag = 23;
  int32 disclosed_quantity = 24;
  int32 total_order_quantity = 25;
  int32 limit_rate = 26;
  int32 stop_loss_trigger = 27;
  string order_valid_date = 28;
  string order_type = 29;
  string ack_time = 30;
  string special_flag = 31;
  string order_flow = 32;
  string spread_order_indicator = 33;
  string remarks = 34;
  string user_flag = 35;
  string exchange_remarks = 36;
  string index_code = 37;
  string sltp_trail_flag = 38;
  string vendor_id = 39;
  string vendor_number = 40;
  string one_click_flag = 41;
  string one_click_portfolio_id = 42;
  string algo_id = 43;
  string algo_order_remarks = 44;
  string source_flag = 45;
  string popup_flag = 46;
  string expiry_date2 = 47;
  string ip_address = 48;
  string call_source = 49;
  string fresh_order_ref = 50;
  string alias = 51;
  string system_message = 52;
  string request_type = 53;
  string user_password = 54;
  string delivery_eos_flag = 55;
  string order_reference = 56;
  string cover_order_ref = 57;
}

service Ingest {
  rpc SendOrder(Order) returns (OrderResponse);
}

message OrderResponse {
  bool success = 1;
  string message = 2;
}
